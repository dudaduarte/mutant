version: "2.1"

services:
  app:
    build: .
    command: node src/index.js
    ports: 
      - "8080:8080"
    environment:
      - PORT=8080
    depends_on:
      kibana:
        condition: service_healthy
    links:
      - elasticsearch
    volumes:
      - .:/app
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.7.1
    ports:
      - "9200:9200"
    volumes:
      - ./elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./elasticsearch:/usr/share/elasticsearch/data/
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s

  kibana:
    image: docker.elastic.co/kibana/kibana:7.7.1
    ports:
      - 5601:5601
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.7.1
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
        -E setup.template.name="apm-server"
        -E setup.template.pattern="filebeat-*"
        -E logging.to_files=true
        -E transaction.sampled=true
    depends_on:
      kibana:
        condition: service_healthy

volumes:
  elasticsearch:
    driver: local